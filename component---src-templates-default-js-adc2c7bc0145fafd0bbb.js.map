{"version":3,"sources":["webpack:///./src/components/contact/contact.js","webpack:///./src/templates/default.js"],"names":["withLocation","withShowcase","_ref","_ref$meta","meta","heading","form","address","elemId","react_default","a","createElement","id","className","title","formik_esm","initialValues","name","email","message","validate","values","errors","test","onSubmit","_ref2","setSubmitting","console","log","setTimeout","alert","JSON","stringify","_ref3","touched","handleChange","handleSubmit","isSubmitting","type","placeholder","namePlaceholder","maxLength","onChange","value","emailPlaceholder","messagePlaceholder","rows","disabled","submitBtnTxt","index_es","icon","faMapMarkerAlt","line1","line2","country","faEnvelope","DefaultTemplate","components","pageContext","layout","map","i","comName","toLowerCase","banner","key","grid","callToAction","contact_contact","imageText","cards","hero","pills","quartet","networkGraph","componentResolver","position"],"mappings":"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","file":"component---src-templates-default-js-adc2c7bc0145fafd0bbb.js","sourcesContent":["import React from 'react'\nimport { Formik } from 'formik'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport './contact.scss'\nimport withLocation from '../common/withLocation'\nimport withShowcase from '../common/withShowcase/withShowcase'\n\nconst responseText = ''\n\nconst Contact = ({ meta: { heading, form, address }, elemId }) => (\n  <section id={elemId} className=\"contact\">\n    <div className=\"container\">\n      <h1 className=\"text-center pb-60\">{heading}</h1>\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h4 className=\"pb-15\">{form.title}</h4>\n\n          <Formik\n            initialValues={{ name: '', email: '', message: '' }}\n            validate={values => {\n              let errors = {}\n              if (!values.email) {\n                errors.email = 'Required'\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = 'Invalid email address'\n              }\n              return errors\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log(42)\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2))\n                setSubmitting(false)\n              }, 400)\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <div className=\"mt-15\">\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={form.namePlaceholder}\n                    maxLength=\"120\"\n                    className=\"single-input\"\n                    onChange={handleChange}\n                    value={values.name}\n                  />\n                  {errors.name && touched.name}\n                  <small className=\"form-text text-muted\">\n                    Please enter your name\n                  </small>\n                </div>\n                <div className=\"mt-15\">\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder={form.emailPlaceholder}\n                    maxLength=\"120\"\n                    className=\"single-input\"\n                    onChange={handleChange}\n                    value={values.email}\n                  />\n                  {errors.email && touched.email && errors.email}\n                  <small className=\"form-text text-muted\">\n                    Please enter an email address\n                  </small>\n                  <small className=\"form-text text-muted\">\n                    Please provide a valid email\n                  </small>\n                </div>\n                <div className=\"mt-15 pb-25\">\n                  <textarea\n                    name=\"message\"\n                    placeholder={form.messagePlaceholder}\n                    maxLength=\"1000\"\n                    rows=\"5\"\n                    className=\"single-textarea\"\n                    onChange={handleChange}\n                    value={values.message}\n                  />\n                  {errors.message && touched.message}\n                  <small className=\"form-text text-muted\">\n                    Please enter a message to send\n                  </small>\n                </div>\n                {/*<div className=\"contact__actions\">*/}\n                {/*<h5 className=\"contact__actions__response\">{responseText}</h5>*/}\n                <button\n                  type=\"submit\"\n                  className=\"primary-btn\"\n                  disabled={isSubmitting}\n                >\n                  {responseText ? 'OK' : form.submitBtnTxt}\n                </button>\n                {/*</div>*/}\n              </form>\n            )}\n          </Formik>\n        </div>\n        <div className=\"contact__address col-lg-6\">\n          <h4 className=\"pb-15\">{address.title}</h4>\n          <div className=\"d-flex pt-15\">\n            <div className=\"contact__address__icon\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n              {/*<i class=\"{{ 'fa fa-' +address?.addressIcon }}\"></i>*/}\n            </div>\n            <div className=\"pl-30\">\n              <div className=\"pb-10\">{address.line1}</div>\n              <div className=\"pb-10\">{address.line2}</div>\n              <div className=\"pb-10\">{address.country}</div>\n            </div>\n          </div>\n          <div className=\"d-flex pt-15\">\n            <div className=\"contact__address__icon\">\n              <FontAwesomeIcon icon={faEnvelope} />\n              {/*<i class=\"{{ 'fa fa-' +address?.emailIcon }}\"></i>*/}\n            </div>\n            <div className=\"pl-30\">{address.email}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default withLocation(withShowcase(Contact))\n","import React from 'react'\nimport Layout from '../components/layout/layout'\nimport Banner from '../components/banner/banner'\nimport Grid from '../components/grid/grid'\nimport CallToAction from '../components/callToAction/callToAction'\nimport Contact from '../components/contact/contact'\nimport ImageText from '../components/imageText/imageText'\nimport Cards from '../components/cards/cards'\nimport Hero from '../components/hero/hero'\nimport Pills from '../components/pills/pills'\nimport Quartet from '../components/quartet/quartet'\nimport NetworkGraph from '../components/networkGraph/networkGraph'\n\n/**\n * Utility to resolve the component in use\n * @param meta Component's meta\n * @param elemId Section's id, used for anchoring\n * @param i Index used for mapping\n */\nconst componentResolver = (meta, elemId, i) => ({\n  ['banner']: <Banner meta={meta} elemId={elemId} key={i} />,\n  ['grid']: <Grid meta={meta} elemId={elemId} key={i} />,\n  ['calltoaction']: <CallToAction meta={meta} elemId={elemId} key={i} />,\n  ['contact']: <Contact meta={meta} elemId={elemId} key={i} />,\n  ['imagetext']: <ImageText meta={meta} elemId={elemId} key={i} />,\n  ['cards']: <Cards meta={meta} elemId={elemId} key={i} />,\n  ['hero']: <Hero meta={meta} elemId={elemId} key={i} />,\n  ['pills']: <Pills meta={meta} elemId={elemId} key={i} />,\n  ['quartet']: <Quartet meta={meta} elemId={elemId} key={i} />,\n  ['networkgraph']: <NetworkGraph meta={meta} elemId={elemId} key={i} />,\n})\n\n/**\n * Component for laying out a default page\n * @param components\n */\nconst DefaultTemplate = ({ pageContext: { components } }) => (\n  <Layout>\n    {components.map((meta, i) => {\n      const comName = meta.name.toLowerCase()\n      const elemId = `${comName}${meta.position}`\n      return componentResolver(meta, elemId, i)[comName]\n    })}\n  </Layout>\n)\n\nexport default DefaultTemplate\n"],"sourceRoot":""}