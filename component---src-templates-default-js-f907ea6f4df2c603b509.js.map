{"version":3,"sources":["webpack:///./src/components/banner/banner.js","webpack:///./src/components/grid/grid.js","webpack:///./src/components/callToAction/callToAction.js","webpack:///./src/components/contact/contact.js","webpack:///./src/components/imageText/imageText.js","webpack:///./src/components/common/common.js","webpack:///./src/components/cards/cards.js","webpack:///./src/components/hero/hero.js","webpack:///./src/templates/default.js"],"names":["Banner","_ref","_ref$meta","meta","heading","html","btnTxt","btnUrl","elemId","react_default","a","createElement","className","id","dangerouslySetInnerHTML","__html","gatsby_browser_entry","to","Tile","icon","src","alt","Grid","_ref2","_ref2$meta","description","tiles","map","tile","i","grid_Tile","key","CallToAction","image","style","backgroundImage","fragment","Contact","form","address","title","formik_esm","initialValues","name","email","message","validate","values","errors","test","onSubmit","setSubmitting","console","log","setTimeout","alert","JSON","stringify","_ref3","touched","handleChange","handleSubmit","isSubmitting","type","placeholder","namePlaceholder","maxLength","onChange","value","emailPlaceholder","messagePlaceholder","rows","disabled","submitBtnTxt","index_es","faMapMarkerAlt","line1","line2","country","faEnvelope","ImageText","headline","imagePosition","href","target","Card","industry","moreTxt","Cards","cards","cards_Card","Hero","DefaultTemplate","components","pageContext","layout","comName","toLowerCase","banner_banner","grid_grid","callToAction_callToAction","contact_contact","imageText_imageText","components_cards_cards","hero_hero","componentResolver","position"],"mappings":"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","file":"component---src-templates-default-js-f907ea6f4df2c603b509.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport './banner.scss'\n\nconst Banner = ({ meta: { heading, html, btnTxt, btnUrl }, elemId }) => (\n  <section className=\"banner\" id={elemId}>\n    <div className=\"banner__bg\">\n      <div className=\"banner__bg__img\" />\n    </div>\n    <div className=\"container fullscreen\">\n      <div className=\"row fullscreen banner__wrapper\">\n        <div className=\"banner__text col-lg-7\">\n          <h1 className=\"banner__text__heading\">{heading}</h1>\n          <div\n            className=\"banner__text__body\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n          {/*<a*/}\n          {/*className=\"primary-btn\"*/}\n          {/*href=\"mailto:hello@thesquaredev.com?subject=Hello Squaredev\"*/}\n          {/*target=\"_blank\"*/}\n          {/*>*/}\n          {/*</a>*/}\n          <Link className=\"primary-btn\" to={btnUrl}>\n            {btnTxt}\n          </Link>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default Banner\n","import React from 'react'\nimport './grid.scss'\n\n// Subcomponents\nconst Tile = ({ html, icon }) => (\n  <div className=\"single-offer d-flex flex-row\">\n    <div className=\"icon\">\n      <img src={`images/${icon}`} alt=\"\" />\n    </div>\n    <div className=\"desc\">\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  </div>\n)\n\n// Component\nconst Grid = ({ meta: { heading, description, tiles }, elemId }) => (\n  <section className=\"grid section-gap\" id={elemId}>\n    <div className=\"grid__content container\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"menu-content pb-60 col-lg-10\">\n          <div className=\"title text-center\">\n            <h1 className=\"mb-10\">{heading}</h1>\n            <p>{description}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"row flex-wrap\">\n        {tiles.map((tile, i) => {\n          return <Tile html={tile.html} icon={tile.icon} key={i} />\n        })}\n      </div>\n    </div>\n  </section>\n)\n\nexport default Grid\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport './callToAction.scss'\n\nconst CallToAction = ({ meta: { heading, html, btnTxt, image }, elemId }) => (\n  <section\n    id={elemId}\n    className=\"callto-action-area relative section-gap\"\n    style={{ backgroundImage: `url(images/${image})` }}\n  >\n    <div className=\"overlay overlay-bg\" />\n    <div className=\"container\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"menu-content col-lg-9\">\n          <div className=\"title text-center\">\n            <h1 className=\"mb-10 text-white\">{heading}</h1>\n            <p\n              className=\"text-white\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <Link to=\"\" className=\"primary-btn\" fragment=\"contact\">\n              {btnTxt}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default CallToAction\n","import React from 'react'\nimport { Formik } from 'formik'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport './contact.scss'\n\nconst responseText = ''\n\nconst Contact = ({ meta: { heading, form, address }, elemId }) => (\n  <section id={elemId} className=\"contact\">\n    <div className=\"container\">\n      <h1 className=\"text-center pb-60\">{heading}</h1>\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h4 className=\"pb-15\">{form.title}</h4>\n\n          <Formik\n            initialValues={{ name: '', email: '', message: '' }}\n            validate={values => {\n              let errors = {}\n              if (!values.email) {\n                errors.email = 'Required'\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = 'Invalid email address'\n              }\n              return errors\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log(42)\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2))\n                setSubmitting(false)\n              }, 400)\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <div className=\"mt-15\">\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder={form.namePlaceholder}\n                    maxLength=\"120\"\n                    className=\"single-input\"\n                    onChange={handleChange}\n                    value={values.name}\n                  />\n                  {errors.name && touched.name}\n                  <small className=\"form-text text-muted\">\n                    Please enter your name\n                  </small>\n                </div>\n                <div className=\"mt-15\">\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder={form.emailPlaceholder}\n                    maxLength=\"120\"\n                    className=\"single-input\"\n                    onChange={handleChange}\n                    value={values.email}\n                  />\n                  {errors.email && touched.email && errors.email}\n                  <small className=\"form-text text-muted\">\n                    Please enter an email address\n                  </small>\n                  <small className=\"form-text text-muted\">\n                    Please provide a valid email\n                  </small>\n                </div>\n                <div className=\"mt-15 pb-25\">\n                  <textarea\n                    name=\"message\"\n                    placeholder={form.messagePlaceholder}\n                    maxLength=\"1000\"\n                    rows=\"5\"\n                    className=\"single-textarea\"\n                    onChange={handleChange}\n                    value={values.message}\n                  />\n                  {errors.message && touched.message}\n                  <small className=\"form-text text-muted\">\n                    Please enter a message to send\n                  </small>\n                </div>\n                {/*<div className=\"contact__actions\">*/}\n                {/*<h5 className=\"contact__actions__response\">{responseText}</h5>*/}\n                <button\n                  type=\"submit\"\n                  className=\"primary-btn\"\n                  disabled={isSubmitting}\n                >\n                  {responseText ? 'OK' : form.submitBtnTxt}\n                </button>\n                {/*</div>*/}\n              </form>\n            )}\n          </Formik>\n        </div>\n        <div className=\"contact__address col-lg-6\">\n          <h4 className=\"pb-15\">{address.title}</h4>\n          <div className=\"d-flex pt-15\">\n            <div className=\"contact__address__icon\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n              {/*<i class=\"{{ 'fa fa-' +address?.addressIcon }}\"></i>*/}\n            </div>\n            <div className=\"pl-30\">\n              <div className=\"pb-10\">{address.line1}</div>\n              <div className=\"pb-10\">{address.line2}</div>\n              <div className=\"pb-10\">{address.country}</div>\n            </div>\n          </div>\n          <div className=\"d-flex pt-15\">\n            <div className=\"contact__address__icon\">\n              <FontAwesomeIcon icon={faEnvelope} />\n              {/*<i class=\"{{ 'fa fa-' +address?.emailIcon }}\"></i>*/}\n            </div>\n            <div className=\"pl-30\">{address.email}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default Contact\n","import React from 'react'\n// import InViewMonitor from 'react-inview-monitor'\nimport { IMAGE_LEFT } from '../common/common'\nimport './imageText.scss'\n\nconst ImageText = ({\n  meta: { headline, heading, html, btnTxt, btnUrl, image, imagePosition },\n  elemId,\n}) => (\n  <section\n    className={\n      imagePosition === IMAGE_LEFT\n        ? 'image-text image-left section-gap'\n        : 'image-text image-right section-gap'\n    }\n    id={elemId}\n  >\n    <div className=\"container m-auto\">\n      <div className=\"row\">\n        <div\n          className={\n            imagePosition === IMAGE_LEFT\n              ? 'col-md-5 image-col'\n              : 'col-md-5 image-col offset-md-1 order-md-2'\n          }\n        >\n          {/*<InViewMonitor*/}\n          {/*classNameNotInView=\"image-wrap\"*/}\n          {/*classNameInView=\"image-wrap inview\"*/}\n          {/*>*/}\n          <div className=\"image-wrap inview\">\n            <div\n              className=\"image\"\n              style={{ backgroundImage: `url(images/${image})` }}\n            />\n          </div>\n          {/*</InViewMonitor>*/}\n        </div>\n        <div\n          className={\n            imagePosition === IMAGE_LEFT\n              ? 'text-col col-md-6 offset-md-1'\n              : 'text-col col-md-6'\n          }\n        >\n          <div className=\"text-container\">\n            <div className=\"text-wrap\">\n              <h6>{headline}</h6>\n              <h2>{heading}</h2>\n              <div\n                className=\"pt-20 pb-20\"\n                dangerouslySetInnerHTML={{ __html: html }}\n              />\n              {btnTxt && (\n                <a className=\"primary-btn\" href={btnUrl} target=\"_blank\">\n                  {btnTxt}\n                </a>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default ImageText\n","export const IMAGE_LEFT = 'left';\n","import React from 'react'\nimport './cards.scss'\n\nconst Card = ({ industry, heading, description, image, moreTxt }) => (\n  <a href=\"/behavioral-analytics/\" className=\"card\">\n    <span className=\"card__title\">{industry}</span>\n    <h4>{heading}</h4>\n    <img src={`images/${image}`} alt=\"\" />\n    <p>{description}</p>\n    <span className=\"card__more\">{moreTxt}</span>\n  </a>\n)\n\nconst Cards = ({ meta: { headline, moreTxt, cards }, elemId }) => (\n  <section className=\"cards section-gap\" id={elemId}>\n    <div className=\"container\">\n      <div className=\"cards__wrapper\">\n        {headline && (\n          <div className=\"cards__heading\">\n            <h1>{headline}</h1>\n          </div>\n        )}\n        {cards.map(({ industry, heading, image, description }, i) => {\n          return (\n            <Card\n              industry={industry}\n              heading={heading}\n              image={image}\n              description={description}\n              moreTxt={moreTxt}\n              key={i}\n            />\n          )\n        })}\n      </div>\n    </div>\n  </section>\n)\n\nexport default Cards\n","import React from 'react'\nimport './hero.scss'\nimport { Link } from 'gatsby'\n\nconst Hero = ({ meta: { heading, html, image, btnTxt, btnUrl }, elemId }) => (\n  <section className=\"hero\" id={elemId}>\n    <div className=\"hero__bg\">\n      <div\n        className=\"hero__bg__img\"\n        style={{ backgroundImage: `url(images/${image})` }}\n      />\n    </div>\n    <div className=\"container\">\n      <div className=\"row align-items-center justify-content-center\">\n        <div className=\"col-lg-10\">\n          <div className=\"generic-banner-content\">\n            <h1 className=\"text-white\">{heading}</h1>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <Link className=\"primary-btn\" to={btnUrl}>\n              {btnTxt}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default Hero\n","import React from 'react'\nimport Layout from '../components/layout/layout'\nimport Banner from '../components/banner/banner'\nimport Grid from '../components/grid/grid'\nimport CallToAction from '../components/callToAction/callToAction'\nimport Contact from '../components/contact/contact'\nimport ImageText from '../components/imageText/imageText'\nimport Cards from '../components/cards/cards'\nimport Hero from '../components/hero/hero'\n\n/**\n * Utility to resolve the component in use\n * @param meta Component's meta\n * @param elemId Section's id, used for anchoring\n * @param i Index used for mapping\n */\nconst componentResolver = (meta, elemId, i) => ({\n  ['banner']: <Banner meta={meta} elemId={elemId} key={i} />,\n  ['grid']: <Grid meta={meta} elemId={elemId} key={i} />,\n  ['calltoaction']: <CallToAction meta={meta} elemId={elemId} key={i} />,\n  ['contact']: <Contact meta={meta} elemId={elemId} key={i} />,\n  ['imagetext']: <ImageText meta={meta} elemId={elemId} key={i} />,\n  ['cards']: <Cards meta={meta} elemId={elemId} key={i} />,\n  ['hero']: <Hero meta={meta} elemId={elemId} key={i} />,\n})\n\n/**\n * Component for laying out a default page\n * @param components\n */\nconst DefaultTemplate = ({ pageContext: { components } }) => (\n  <Layout>\n    {components.map((meta, i) => {\n      const comName = meta.name.toLowerCase()\n      const elemId = `${comName}${meta.position}`\n      return componentResolver(meta, elemId, i)[comName]\n    })}\n  </Layout>\n)\n\nexport default DefaultTemplate\n"],"sourceRoot":""}